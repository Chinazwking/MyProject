#version 330 core

in vec3 onormal;
in vec3 frag_pos;

out vec4 frag_color;

uniform mat3 normal_mat;
uniform vec3 light_pos;
uniform vec3 light_color;
uniform vec3 object_color;

void main()
{
    float ambient = 0.1;
    float specular_str = 1;
    float shininess = 64;

    vec3 normal = normalize(normal_mat * onormal);
    vec3 lightdir = normalize(light_pos - frag_pos);
    float diffuse = max(dot(normal, lightdir), 0);
    vec3 viewdir = normalize(-frag_pos);
    float specular = pow(max(dot(viewdir, reflect(-lightdir, normal)), 0), shininess) * specular_str;
    vec3 res = (ambient + diffuse + specular) * light_color;
    frag_color = vec4(res * object_color, 1.0);
}
