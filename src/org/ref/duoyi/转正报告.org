#+STARTUP: overview indent
* 转正报告
** 工作主要内容
*** 英雄山副本
    * 需求描述
      实现一个线性的单人英雄山关卡以及一个可以在当前章节自由选择关卡进行挑战的组
      队英雄山关卡
    * 主要实现内容
      - item可以按照任意坐标分布的滚动框
*** 基础组队
    * 需求描述
      将最多三个玩家组成一个小队, 可以自由的邀请, 踢出, 退出, 申请加入队伍
    * 主要实现内容
      - 大量的网络交互协议
*** 车轮战
    * 需求描述
      玩家出三支队伍, 轮流和敌方的三支队伍进行战斗. 每一场战斗的胜利方的剩余
      英雄, 以及血量传递到下一场战斗之中, 率先赢得三场比赛的阵容胜利
    * 主要实现内容
      - 对现有战斗模型和战斗界面的重新设计以满足可扩展的需求
** 模块核心业务梳理
*** 英雄山
英雄山的核心在于每个关卡的状态, 单人关卡完成之后将进度保存到服务器即可, 组队关卡
需要维护每个当前章节每个关卡的状态, 用于显示, 并在所有当前关卡结束之后切换到下一
个章节.
*** 基础组队
基础组队的核心在于团队状态的管理, 只需要实现好队伍的创建, 分离, 添加等功能, 然后
根据服务端发过来的数据调用相应接口进行相应处理即可.
*** 车轮战
车轮战要稍微复杂一些, 在模型上, 因为要复用现有的战斗模型层, 而现有的战斗模型层是
为单场战斗而进行设计的, 并且耦合了大量其他玩法的逻辑, 所以先将其他玩法的逻辑集中
并移动到对应的函数里面, 通过在几个特殊的位置设置钩子来调用, 虽然没有完全解耦, 但
至少每个玩法都局限在自己的函数中, 修改时不会对其他玩法造成影响. 然后用一个车轮战
的管理器来管理三队的阵容, 通过模型层的接口来设置阵营并刷新界面, 每场战斗的结果也
保存到模型层然后根据此数据设置下一场的阵营以及在场英雄的生命值.
在界面上没有跟当前的战斗布局和战场界面混合到一起(没有通过在ui文件里加控件然后隐藏
), 而是通过在战斗界面上面覆盖一层透明车轮战战斗的专用显示界面, 通过模型层来实现战
斗界面和车轮战界面的同步.

** 工作亮点
1. 模块代码实现的时候尽量避免耦合同时保持逻辑上的简洁
** 成长进步
** 问题反思
** 核心价值观的理解和实践
** 团队建议和培训建议
