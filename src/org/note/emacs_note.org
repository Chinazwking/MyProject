#+TAGS: { app(a) plugin(p) }

* Emacs 问题记录
** c-c++ layer clangd后端无法识别标准库                              :plugin:
   这个问题是由于cmake生成的compile_commands.json中是不包含标准库的路径的，
   即不包含-I/.../include/c++/v1，因此需要在CmakeLists.txt中使用INCLUDE_DIRECTORIES
   命令手动将标准库路径包含在其中。
   另外有时候包含这个标准可能会导致编译错误，这个时候就只能换一个不出错的标准库
** 更新时出现大量包找不到，或者是spacemacs启动出错                      :app:
   很大可能是源的问题，导致包不完整，最后导致启动出现奇奇怪怪的错误
** py lsp 无法正常启动，显示name 'platform_system' is not defined    :plugin:
   请更新pip和setuptools
   pip install --upgrade
** windows下emacs无法找到spacemacs                                    :app:
   请设置环境变量$HOME为.emacs.d所在的目录，这样emacs才能找到配置文件
** org-mode中timestamp的+1x, ++1x和.+1x                             :plugin:
   - +1x :: 每次完成向后推迟一个间隔, 即便当前时间已经超过deadline.
     #+BEGIN_EXAMPLE
     如果状态为: TODO <2020-4-3 21:30 +1h>
     而今天的时间为2021-4-3 9:20, <C-c><C-t>将任务变为DONE, 状态将变为
     TODO <2020-4-3 22:30 +1h>
     #+END_EXAMPLE
   - ++1x :: 和+1x的区别在于, 如果当前时间已经超过deadline, 则会一次性将时间同步
     到当前时间之后的最近设定间隔
     #+BEGIN_EXAMPLE
     如果状态为: TODO <2020-4-3 21:30 ++1h>
     而今天的时间为2021-4-3 9:20, <C-c><C-t>将任务变为DONE, 状态将变为
     TODO <2021-4-3 9:30 +1h>
     #+END_EXAMPLE
   - .+1x :: 和++1x的区别在于, 同步到以当前时间为基础的下个间隔, 而不是设定时间的
     下个间隔
     #+BEGIN_EXAMPLE
     如果状态为: TODO <2020-4-3 21:30 .+1h>
     而今天的时间为2021-4-3 9:20, <C-c><C-t>将任务变为DONE, 状态将变为
     TODO <2021-4-3 10:20 .+1h>
     #+END_EXAMPLE
** 新建窗口在屏幕中的位置                                              :app:
   这个是由变量 ~split-height-threshold~ 和 ~split-width-threshold~ 来决定的, 比
   如如果将 ~split-width-threshold~ 设置为80, 那么当你创建新窗口时如果他的宽度能
   超过80列, 那么就会水平创建窗口, 否则竖直创建窗口
   
** emacs默认配置读取路径                                               :app:
   linux/unix系统默认在~目录, windows下如果想要在~目录, 必须设置环境变量$HOME=~
